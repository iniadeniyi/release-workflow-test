name: Release Pipeline

on:
  push:
    branches:
      - main

jobs:
  release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Generate Next Version Tag
        id: versioning
        run: |
          # Get the latest tag or default to v0.0.0
          latest=$(git describe --tags `git rev-list --tags --max-count=1` || echo "v0.0.0")
          # Increment patch version (e.g., v1.0.0 -> v1.0.1)
          next=$(echo $latest | awk -F. '{$NF+=1; print $0}' | sed 's/ //g')
          echo "next_version=$next" >> $GITHUB_ENV

      - name: Create Tag
        run: |
          git config user.name "github-actions"
          git config user.email "actions@github.com"
          git tag -a ${{ env.next_version }} -m "Release version ${{ env.next_version }}"
          git push origin ${{ env.next_version }}

      - name: Generate Release Notes
        id: release_notes
        run: |
          # Get logs since the last tag, or all logs if no tags exist
          notes=$(git log $(git describe --tags --abbrev=0 2>/dev/null || echo "HEAD")..HEAD --oneline || echo "Initial release.")
          echo "release_notes=$notes" >> $GITHUB_ENV

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.next_version }}
          release_name: "Release ${{ env.next_version }}"
          body: ${{ env.release_notes }}
          draft: false
          prerelease: false
          token: ${{ secrets.GITHUB_TOKEN }}
